{"ast":null,"code":"var _jsxFileName = \"/home/master/React.js/mern-blog/client/flowrite/src/pages/RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  async function register(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n    if (response.status === 200) {\n      alert(\"registration successful\");\n    } else {\n      alert('registration failed');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: register,\n    action: \"\",\n    className: \"max-width-[400px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center font-bold text-3xl my-10\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"bg-[#fff] w-full p-2 block mb-5 border-[#ddd] border-2 rounded-lg\",\n      placeholder: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"bg-[#fff] w-full p-2 block mb-5 border-[#ddd] border-2 rounded-lg\",\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-full block bg-[#555] text-[#fff] rounded-lg py-2\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","useState","password","setPassword","register","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","onSubmit","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/master/React.js/mern-blog/client/flowrite/src/pages/RegisterPage.jsx"],"sourcesContent":["import React from 'react'\nconst RegisterPage = () => {\n\n\n\n    const [username, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n \n    async function register(e) {\n        e.preventDefault();\n     const response = await  fetch('http://localhost:4000/register', {\n            method : 'POST',\n            body : JSON.stringify({username,password}),\n            headers :{'Content-Type' : 'application/json'}\n        })\n        setUsername(\"\");\n        setPassword(\"\");\n\n        if(response.status === 200){\n          alert(\"registration successful\");\n        }else{\n          alert('registration failed')\n        }\n     }\n \n\n\n  return (\n    <form onSubmit={register} action=\"\" className=\"max-width-[400px]\">\n      <h1 className=\"text-center font-bold text-3xl my-10\">Register</h1>\n      <input\n        type=\"text\"\n        value={username}\n        onChange={e=> setUsername(e.target.value)}\n        className=\"bg-[#fff] w-full p-2 block mb-5 border-[#ddd] border-2 rounded-lg\"\n        placeholder=\"username\"\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={e=> setPassword(e.target.value)}\n        className=\"bg-[#fff] w-full p-2 block mb-5 border-[#ddd] border-2 rounded-lg\"\n        placeholder=\"password\"\n      />\n      <button className=\"w-full block bg-[#555] text-[#fff] rounded-lg py-2\">\n        Login\n      </button>\n    </form>\n  )\n}\n\nexport default RegisterPage"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAIvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAElD,eAAeG,QAAQA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IACrB,MAAMC,QAAQ,GAAG,MAAOC,KAAK,CAAC,gCAAgC,EAAE;MACzDC,MAAM,EAAG,MAAM;MACfC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;QAACb,QAAQ;QAACG;MAAQ,CAAC,CAAC;MAC1CW,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB;IACjD,CAAC,CAAC;IACFb,WAAW,CAAC,EAAE,CAAC;IACfG,WAAW,CAAC,EAAE,CAAC;IAEf,IAAGI,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;MACzBC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,MAAI;MACHA,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACH;EAIH,oBACEnB,OAAA;IAAMoB,QAAQ,EAAEZ,QAAS;IAACa,MAAM,EAAC,EAAE;IAACC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC/DvB,OAAA;MAAIsB,SAAS,EAAC,sCAAsC;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClE3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE1B,QAAS;MAChB2B,QAAQ,EAAErB,CAAC,IAAGL,WAAW,CAACK,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;MAC1CP,SAAS,EAAC,mEAAmE;MAC7EU,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACF3B,OAAA;MACE4B,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAErB,CAAC,IAAGF,WAAW,CAACE,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;MAC1CP,SAAS,EAAC,mEAAmE;MAC7EU,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACF3B,OAAA;MAAQsB,SAAS,EAAC,oDAAoD;MAAAC,QAAA,EAAC;IAEvE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAAzB,EAAA,CAhDKD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAkDlB,eAAeA,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}