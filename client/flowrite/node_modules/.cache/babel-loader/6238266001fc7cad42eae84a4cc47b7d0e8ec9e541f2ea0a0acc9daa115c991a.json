{"ast":null,"code":"var _jsxFileName = \"/home/master/React.js/mern-blog/client/flowrite/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  async function login(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n    if (response.status === 200) {\n      alert(\"registration successful\");\n    } else {\n      alert('registration failed');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: login,\n    className: \"max-width-[400px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center font-bold text-3xl my-10\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"bg-[#fff] w-full p-2 block mb-5 border-[#ddd] border-2 rounded-lg\",\n      placeholder: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"bg-[#fff] w-full p-2 block mb-5 border-[#ddd] border-2 rounded-lg\",\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-full block bg-[#555] text-[#fff] rounded-lg py-2\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","useState","password","setPassword","login","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","status","alert","action","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/master/React.js/mern-blog/client/flowrite/src/pages/LoginPage.jsx"],"sourcesContent":["import React from \"react\";\n\nconst LoginPage = () => {\n  const [username, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n\n    async function login(e) {\n      e.preventDefault();\n      const response = await  fetch('http://localhost:4000/login', {\n          method : 'POST',\n          body : JSON.stringify({username,password}),\n          headers :{'Content-Type' : 'application/json'},\n          credentials:'include'\n      })\n      setUsername(\"\");\n      setPassword(\"\");\n\n      if(response.status === 200){\n        alert(\"registration successful\");\n      }else{\n        alert('registration failed')\n      }\n   }\n\n  return (\n    <form action=\"\" onSubmit={login} className=\"max-width-[400px]\">\n    <h1 className=\"text-center font-bold text-3xl my-10\">Log In</h1>\n    <input\n      type=\"text\"\n      value={username}\n      onChange={e=> setUsername(e.target.value)}\n      className=\"bg-[#fff] w-full p-2 block mb-5 border-[#ddd] border-2 rounded-lg\"\n      placeholder=\"username\"\n    />\n    <input\n      type=\"password\"\n      value={password}\n      onChange={e=> setPassword(e.target.value)}\n      className=\"bg-[#fff] w-full p-2 block mb-5 border-[#ddd] border-2 rounded-lg\"\n      placeholder=\"password\"\n    />\n    <button className=\"w-full block bg-[#555] text-[#fff] rounded-lg py-2\">\n      Login\n    </button>\n  </form>\n  )\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAGlD,eAAeG,KAAKA,CAACC,CAAC,EAAE;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAOC,KAAK,CAAC,6BAA6B,EAAE;MACzDC,MAAM,EAAG,MAAM;MACfC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;QAACb,QAAQ;QAACG;MAAQ,CAAC,CAAC;MAC1CW,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB,CAAC;MAC9CC,WAAW,EAAC;IAChB,CAAC,CAAC;IACFd,WAAW,CAAC,EAAE,CAAC;IACfG,WAAW,CAAC,EAAE,CAAC;IAEf,IAAGI,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAC;MACzBC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,MAAI;MACHA,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACH;EAED,oBACEpB,OAAA;IAAMqB,MAAM,EAAC,EAAE;IAACC,QAAQ,EAAEd,KAAM;IAACe,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9DxB,OAAA;MAAIuB,SAAS,EAAC,sCAAsC;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChE5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAEtB,CAAC,IAAGL,WAAW,CAACK,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MAC1CP,SAAS,EAAC,mEAAmE;MAC7EU,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACF5B,OAAA;MACE6B,IAAI,EAAC,UAAU;MACfC,KAAK,EAAExB,QAAS;MAChByB,QAAQ,EAAEtB,CAAC,IAAGF,WAAW,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MAC1CP,SAAS,EAAC,mEAAmE;MAC7EU,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACF5B,OAAA;MAAQuB,SAAS,EAAC,oDAAoD;MAAAC,QAAA,EAAC;IAEvE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAET,CAAC;AAAC1B,EAAA,CA7CID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}